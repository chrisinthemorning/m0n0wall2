--- sys/netinet/ip_input.c.orig	2010-06-14 02:09:06.000000000 +0000
+++ sys/netinet/ip_input.c	2011-03-10 01:25:51.000000000 +0000
@@ -463,13 +463,21 @@
 		}
 	}
 
-	if (m->m_pkthdr.csum_flags & CSUM_IP_CHECKED) {
-		sum = !(m->m_pkthdr.csum_flags & CSUM_IP_VALID);
-	} else {
-		if (hlen == sizeof(struct ip)) {
-			sum = in_cksum_hdr(ip);
+	/* skip checksum checks if we came from dummynet, since we'll already
+	   have been here in that case */
+	if (!(m->m_flags & M_IPIN_SKIPPFIL)) {
+		if (m->m_pkthdr.csum_flags & CSUM_IP_CHECKED) {
+			sum = !(m->m_pkthdr.csum_flags & CSUM_IP_VALID);
 		} else {
-			sum = in_cksum(m, hlen);
+		if (hlen == sizeof(struct ip)) {
+				sum = in_cksum_hdr(ip);
+			} else {
+				sum = in_cksum(m, hlen);
+			}
+		}
+		if (sum) {
+			ipstat.ips_badsum++;
+			goto bad;
 		}
 	}
 	if (sum) {
@@ -530,6 +538,21 @@
 	/* Jump over all PFIL processing if hooks are not active. */
 	if (!PFIL_HOOKED(&V_inet_pfil_hook))
 		goto passin;
+	if (m->m_flags & M_IPIN_SKIPPFIL) {
+		/* m0n0wall: packet has already been through dummynet, and therefore
+		   also through ipnat (reversed processing order in m0n0wall);
+		   we skip the pfil hooks to avoid ipnat being called again on
+		   this packet (this implicitly assumes that one_pass=1).
+		   However, we need to remove the dummynet tag, otherwise the
+		   packet will be treated improperly in ip_output. */
+		struct m_tag *dn_tag;
+		dn_tag = m_tag_find(m, PACKET_TAG_DUMMYNET, NULL);
+		if (dn_tag != NULL)
+			m_tag_delete(m, dn_tag);
+		
+		m->m_flags &= ~M_IPIN_SKIPPFIL;
+		goto passin;
+	}
 
 	odst = ip->ip_dst;
 	if (pfil_run_hooks(&V_inet_pfil_hook, &m, ifp, PFIL_IN, NULL) != 0)
